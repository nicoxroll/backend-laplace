services:
  api:
    build: ./api
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/laplace
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://admin:securepass123@rabbitmq:5672
      - WEAVIATE_URL=http://weaviate:8080
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      weaviate:
        condition: service_started
    networks:
      - laplace-network
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  worker:
    build: ./worker
    volumes:
      - ./worker:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/laplace
      - RABBITMQ_URL=amqp://admin:securepass123@rabbitmq:5672
      - WEAVIATE_URL=http://weaviate:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
      weaviate:
        condition: service_started
    networks:
      - laplace-network
    restart: on-failure
    healthcheck:
      test: [ "CMD", "python", "-c", "import sys; sys.exit(0)" ]
      interval: 30s
      timeout: 10s
      retries: 3

  bert-service:
    build: ./bert-service
    ports:
      - "5000:5000"
    volumes:
      - ./bert-service:/app
    environment:
      - MODEL_PATH=/app/models
    networks:
      - laplace-network
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/migrations:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=laplace
    ports:
      - "5432:5432"
    networks:
      - laplace-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laplace-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=securepass123
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - laplace-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s # Aumentado de 10s a 30s
      timeout: 15s # Aumentado de 5s a 15s
      retries: 5
      start_period: 60s # Añadido periodo inicial de inicio
    restart: unless-stopped

  weaviate:
    image: semitechnologies/weaviate:1.18.3
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true" # Habilitar acceso anónimo
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "text2vec-transformers"
      ENABLE_MODULES: "text2vec-transformers"
      TRANSFORMERS_INFERENCE_API: "http://bert-service:5000"
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - laplace-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    depends_on:
      bert-service:
        condition: service_started

networks:
  laplace-network:
    driver: bridge

volumes:
  postgres_data:
  weaviate_data:
  rabbitmq_data:
  redis_data:
